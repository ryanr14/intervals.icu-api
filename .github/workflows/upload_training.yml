name: Upload Training Data

on:
  issues:
    types: [opened]

jobs:
  process-attachment:
    if: contains(github.event.issue.body, '.json')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Install GitHub CLI
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y
    
    - name: Download attachment
      run: |
        ATTACHMENT_URL=$(echo "${{ github.event.issue.body }}" | grep -o 'https://.*\.json')
        if [ -z "$ATTACHMENT_URL" ]; then
          echo "No JSON file URL found in issue body"
          exit 1
        fi
        curl -L -o training.json "$ATTACHMENT_URL"
        
    - name: Create config file
      env:
        ATHLETE_ID: ${{ secrets.ATHLETE_ID }}
        API_KEY: ${{ secrets.API_KEY }}
      run: |
        sed -i "s/ATHLETE_ID = \"ID\"/ATHLETE_ID = \"$ATHLETE_ID\"/" upload_training.py
        sed -i "s/API_KEY = \"API_KEY\"/API_KEY = \"$API_KEY\"/" upload_training.py
        
    - name: Run upload script
      run: python upload_training.py training.json
      
    - name: Comment on issue
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Training data has been processed and uploaded.'
          })